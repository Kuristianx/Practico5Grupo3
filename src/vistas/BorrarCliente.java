/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vistas;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.table.DefaultTableModel;
import practico5grupo3.Contacto;
import practico5grupo3.Directorio;

/**
 *
 * @author Fede-
 */
public class BorrarCliente extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmBorrar
     */
    DefaultTableModel elBarto= new DefaultTableModel();
    DefaultListModel <String> modeloLista= new DefaultListModel<>();
    private List<String> todosLosDni2 = new ArrayList<>(); 
    
    public BorrarCliente() {
        initComponents();
        
        for (Integer dni : Directorio.TodosLosDni()) {
            modeloLista.addElement(String.valueOf(dni));
            todosLosDni2.add(String.valueOf(dni)); 
                    
        }
        jListDni.setModel(modeloLista);
       
        titulos();
        
        jTdni.getDocument().addDocumentListener(new javax.swing.event.DocumentListener(){
        
        @Override
        public void insertUpdate (javax.swing.event.DocumentEvent e){
            filtrarLista();
        }

            @Override
            public void removeUpdate(DocumentEvent de) {
                filtrarLista();
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                  filtrarLista();
            }
        
        
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlbBrClte = new javax.swing.JLabel();
        jlbDNI = new javax.swing.JLabel();
        jTdni = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListDni = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbSalir = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();

        jlbBrClte.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlbBrClte.setForeground(new java.awt.Color(0, 0, 0));
        jlbBrClte.setText("Borrar Cliente");

        jlbDNI.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jlbDNI.setForeground(new java.awt.Color(0, 0, 0));
        jlbDNI.setText("DNI:");

        jListDni.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListDniValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListDni);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "DNI", "Apellido", "Nombre", "Direccion", "Ciudad", "Telefono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Long.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jBEliminar.setText("Borrar Cliente");
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jlbDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jTdni, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(285, 285, 285)
                .addComponent(jlbBrClte)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBEliminar)
                .addGap(184, 184, 184)
                .addComponent(jbSalir)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jlbBrClte)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbDNI)
                            .addComponent(jTdni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalir)
                    .addComponent(jBEliminar))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jListDniValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListDniValueChanged
        // TODO add your handling code here:
        
       if(!evt.getValueIsAdjusting() && jListDni.getSelectedValue() != null){
       int dni = Integer.parseInt(jListDni.getSelectedValue());
       jTdni.setText(String.valueOf(dni));
       Contacto cell = new Directorio().buscarContactoPorDNI(dni);
       
        if(cell==null){
            JOptionPane.showMessageDialog(this, "No se encontro el  contacto con el dni");
            return;
        }
        
       
        Long telefono = Directorio.BuscarTlefonoPorContacto(cell);
    
        String fono = String.valueOf(telefono);
        
        boolean existe= false;
        for(int i=0; i< elBarto.getRowCount();i++){
            int dniTabla = (int)elBarto.getValueAt(i, 0);
            if(dniTabla == cell.getDni()){
                existe= true;
                break;
            }
            
        }
        if(!existe){
        elBarto.addRow(new Object [] {cell.getDni(),cell.getApellido(),cell.getNombre(),cell.getDireccion(), cell.getCiudad(),fono});
        }
           
        jTable1.setModel(elBarto);
        
       } 
                                 
    }//GEN-LAST:event_jListDniValueChanged

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
        // TODO add your handling code here:
        for(int i= elBarto.getRowCount()-1; i>=0; i--){
            
        Number numero = (Number)elBarto.getValueAt(i, 0);
        Long telefono = numero.longValue();
         
        Directorio.borrarContacto(telefono);
       
        elBarto.removeRow(i); 
        }
       
        JOptionPane.showMessageDialog(null, "Todos los contactos de la Tabla fueron eliminados");
        
     actualizarListaDNI();
     
     jTdni.setText("");

    }//GEN-LAST:event_jBEliminarActionPerformed

    private void titulos(){
        elBarto.addColumn("dni");
        elBarto.addColumn("apellido");
        elBarto.addColumn("nombre");
        elBarto.addColumn("direccion");
        elBarto.addColumn("ciudad");
        elBarto.addColumn("telefono");
        jTable1.setModel(elBarto);
    }
    
    private void filtrarLista(){
        String texto = jTdni.getText().trim(); 
        modeloLista.clear();
        for(String dni : todosLosDni2){
            if (dni.startsWith(texto)){ 
                modeloLista.addElement(dni);
            }
        }
    }
    
    private void actualizarListaDNI(){
        modeloLista.clear();
        todosLosDni2.clear();
        for(Integer dni : Directorio.TodosLosDni()){
            modeloLista.addElement(String.valueOf(dni));
            todosLosDni2.add(String.valueOf(dni));
        }
        jListDni.setModel(modeloLista);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBEliminar;
    private javax.swing.JList<String> jListDni;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTdni;
    private javax.swing.JButton jbSalir;
    private javax.swing.JLabel jlbBrClte;
    private javax.swing.JLabel jlbDNI;
    // End of variables declaration//GEN-END:variables
}
